{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","handleSelectTodo","filter","textFilter","modalTodo","className","t0d0s","filterBy","titleFilter","filteredTodos","todo","title","toLowerCase","includes","completed","filterTodos","map","id","type","onClick","TodoFilter","handleSelectFilter","handleTextFilter","onChange","e","target","value","placeholder","style","pointerEvents","Loader","TodoModal","useState","user","setUser","fetchData","a","userId","person","useEffect","href","email","name","App","setTodos","isLoading","setIsLoading","setModalTodo","setfilter","setTextFilter","ReactDOM","render","document","getElementById"],"mappings":"kPAcA,SAASA,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,I,OCZMC,EACX,SAAC,GAEI,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,iBAAkBC,EACrB,EADqBA,OAAQC,EAC7B,EAD6BA,WAAYC,EACzC,EADyCA,UA2B7C,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCAxCgB,SAACC,EACnBC,EACAC,GACA,IAAIC,EAAgBH,EAOpB,OALIE,IACFC,EAAgBH,EAAMJ,QAAO,SAAAQ,GAAI,OAAIA,EAAKC,MACvCC,cAAcC,SAASL,EAAYI,mBAGhCL,GACN,IAAK,YACHE,EAAgBA,EAAcP,QAAO,SAAAQ,GAAI,OAAuB,IAAnBA,EAAKI,aAElD,MACF,IAAK,SACHL,EAAgBA,EAAcP,QAAO,SAAAQ,GAAI,OAAuB,IAAnBA,EAAKI,aAMtD,OAAOL,EAmBFM,CAAYf,EAAOE,EAAQC,GAAYa,KAAI,SAACN,GAAD,OAC1C,qBAAkB,UAAQ,OAAOL,UAAU,GAA3C,UACE,oBAAIA,UAAU,eAAd,SAA8BK,EAAKO,KACnC,oBAAIZ,UAAU,eAAd,SACGK,EAAKI,WACJ,sBAAMT,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAKnB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWK,EAAKI,UACf,mBAAqB,kBADzB,SAGGJ,EAAKC,UAIV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVa,KAAK,SACLC,QAAS,kBAAMlB,EAAiBS,IAJlC,SAME,sBAAML,UAAU,OAAhB,SACGD,IAAcM,EACX,mBAAGL,UAAU,qBACb,mBAAGA,UAAU,uBA5BhBK,EAAKO,aCnDXG,EAAa,SAAC,GAAD,IACxBC,EADwB,EACxBA,mBACAC,EAFwB,EAExBA,iBACAnB,EAHwB,EAGxBA,WAHwB,OAKxB,uBAAME,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRkB,SAAU,SAACC,GAAD,OAAOH,EAAmBG,EAAEC,OAAOC,QAF/C,UAIE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGrB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRa,KAAK,OACLb,UAAU,QACVsB,YAAY,YACZD,MAAOvB,EACPoB,SAAU,SAACC,GAAD,OAAOF,EAAiBE,EAAEC,OAAOC,UAG7C,sBAAMrB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdF,GACC,sBAAME,UAAU,gBAAgBuB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRX,KAAK,SACLb,UAAU,SACVc,QAAS,kBAAMG,EAAiB,gBC5C/BQ,G,MAAmB,kBAC9B,qBAAKzB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCMN0B,EAA6B,SAAC,GAGpC,IAFLrB,EAEI,EAFJA,KACAT,EACI,EADJA,iBAEA,EAAwB+B,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAS,uCAAG,4BAAAC,EAAA,6DJSIC,EIRG3B,EAAK2B,OAAtBC,EJQiClD,EAAG,iBAAiBiD,IIT3C,KAGhBH,EAHgB,SAGFI,EAHE,mEJSG,IAACD,IITJ,OAAH,qDAUf,OAJAE,qBAAU,WACRJ,MACC,IAGD,sBAAK9B,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEb4B,EAGA,sBAAK5B,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYK,EAAKO,MAIjB,wBACEC,KAAK,SACLb,UAAU,SACV,UAAQ,cACRc,QAAS,kBAAMlB,EAAiB,YAIpC,sBAAKI,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGK,EAAKC,QAGR,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UAEE,wBAAQA,UAAWK,EAAKI,UACpB,mBAAqB,kBADzB,SAGGJ,EAAKI,UAAY,OAAS,YAI5B,OAED,mBAAG0B,KAAI,iBAAYP,EAAKQ,OAAxB,SACGR,EAAKS,gBArCd,cAAC,EAAD,QCnBKC,EAAgB,WAC3B,MAA0BX,mBAAiB,IAA3C,mBAAOhC,EAAP,KAAc4C,EAAd,KACA,EAAkCZ,oBAAS,GAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KACA,EAAkCd,mBAAsB,MAAxD,mBAAO5B,EAAP,KAAkB2C,EAAlB,KACA,EAA4Bf,mBAAiB,OAA7C,mBAAO9B,EAAP,KAAe8C,EAAf,KACA,EAAoChB,mBAAiB,IAArD,mBAAO7B,EAAP,KAAmB8C,EAAnB,KAEMhD,EAAmB,SAACS,GACxBqC,EAAarC,IAWTyB,EAAS,uCAAG,4BAAAC,EAAA,6DACV9B,ELToBlB,EAAY,UKQtB,KAGhBwD,EAHgB,SAGDtC,EAHC,6EAAH,qDAUf,OAJAiC,qBAAU,WACRJ,IAAYxC,MAAK,kBAAMmD,GAAa,QACnC,IAGD,qCACE,qBAAKzC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAYgB,mBAtBG,SAACd,GAC1ByC,EAAUzC,IAqBoDe,iBA1BvC,SAACI,GACxBuB,EAAcvB,IAyBoFvB,WAAYA,MAGtG,sBAAKE,UAAU,QAAf,UACGwC,GAAa,cAAC,EAAD,KACZA,GAAa,cAAC,EAAD,CAAU7C,MAAOA,EAAOC,iBAAkBA,EAAkBC,OAAQA,EAAQC,WAAYA,EAAYC,UAAWA,cAMrIA,GAAa,cAAC,EAAD,CAAWM,KAAMN,EAAWH,iBAAkBA,QC1DlEiD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e6d16359.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Filter } from '../../types/filter';\n\ntype Props = {\n  todos: Todo[];\n  handleSelectTodo: (todo: Todo) => void;\n  filter: Filter;\n  textFilter: string,\n  modalTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props>\n= ({\n  todos, handleSelectTodo, filter, textFilter, modalTodo,\n}) => {\n  const filterTodos = (t0d0s: Todo[],\n    filterBy: Filter,\n    titleFilter: string) => {\n    let filteredTodos = t0d0s;\n\n    if (titleFilter) {\n      filteredTodos = t0d0s.filter(todo => todo.title\n        .toLowerCase().includes(titleFilter.toLowerCase()));\n    }\n\n    switch (filterBy) {\n      case 'completed':\n        filteredTodos = filteredTodos.filter(todo => todo.completed === true);\n\n        break;\n      case 'active':\n        filteredTodos = filteredTodos.filter(todo => todo.completed === false);\n        break;\n      default:\n      case 'all':\n    }\n\n    return filteredTodos;\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filterTodos(todos, filter, textFilter).map((todo) => (\n          <tr key={todo.id} data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success' : 'has-text-danger'}\n              >\n                {todo.title}\n\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleSelectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  {modalTodo === todo\n                    ? <i className=\"far fa-eye-slash\" />\n                    : <i className=\"far fa-eye\" />}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import { Filter } from '../../types/filter';\n\ntype Props = {\n  handleSelectFilter: (filterBy: Filter) => void;\n  handleTextFilter: (value: string) => void;\n  textFilter: string;\n};\nexport const TodoFilter = ({\n  handleSelectFilter,\n  handleTextFilter,\n  textFilter,\n} : Props) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(e) => handleSelectFilter(e.target.value as Filter)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={textFilter}\n        onChange={(e) => handleTextFilter(e.target.value)}\n      />\n\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {textFilter && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => handleTextFilter('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  handleSelectTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  handleSelectTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const fetchData = async () => {\n    const person = getUser(todo.userId);\n\n    setUser(await person);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => handleSelectTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={todo.completed\n                ? 'has-text-success' : 'has-text-danger'}\n              >\n                {todo.completed ? 'Done' : 'Planned'}\n\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [modalTodo, setModalTodo] = useState<Todo | null>(null);\n  const [filter, setfilter] = useState<Filter>('all');\n  const [textFilter, setTextFilter] = useState<string>('');\n\n  const handleSelectTodo = (todo: Todo | null) => {\n    setModalTodo(todo);\n  };\n\n  const handleTextFilter = (value: string) => {\n    setTextFilter(value);\n  };\n\n  const handleSelectFilter = (filterBy: Filter) => {\n    setfilter(filterBy);\n  };\n\n  const fetchData = async () => {\n    const t0d0s = getTodos();\n\n    setTodos(await t0d0s);\n  };\n\n  useEffect(() => {\n    fetchData().then(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter handleSelectFilter={handleSelectFilter} handleTextFilter={handleTextFilter} textFilter={textFilter} />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {!isLoading && <TodoList todos={todos} handleSelectTodo={handleSelectTodo} filter={filter} textFilter={textFilter} modalTodo={modalTodo} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modalTodo && <TodoModal todo={modalTodo} handleSelectTodo={handleSelectTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}